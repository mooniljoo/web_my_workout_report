{"version":3,"sources":["modules/routines.js","components/CreateWorkoutItem.js","components/RoutineHead.js","components/Counter.js","modules/counter.js","containers/CounterContainer.js","components/Set.js","components/SetList.js","containers/SetListContainer.js","components/WorkoutItem.js","components/WorkoutList.js","containers/WorkoutListContainer.js","components/RoutineBody.js","containers/RoutineContainer.js","App.js","serviceWorker.js","modules/index.js","index.js"],"names":["ADD_SET","ADD_REPS","DATE","Date","now","toString","today","initialState","routine","id","title","createdAt","toLocaleDateString","year","month","day","dayName","weekday","desc","workoutItems","Form","styled","form","Input","input","Button","button","CreateWorkoutItem","useState","text","setText","dispatch","useDispatch","onSubmit","e","preventDefault","type","addWorkout","onAddWorkout","value","placeholder","onChange","target","required","autoFocus","size","RoutineHeadLine","h2","CreateWorkoutItemBlock","div","RoutineHeadBlock","RoutineHead","span","props","open","css","inputs","setInputs","readonly","setReadOnly","y","x","state","setState","onScroll","window","scrollY","scrollX","useEffect","addEventListener","removeEventListener","onscroll","useScroll","console","log","EditTitle","onMouseOver","readOnly","onClick","className","style","position","onCreate","Counter","number","diff","unit","onIncrease","onDecrease","onSetNumber","onSetDiff","selfSelect","select","min","parseFloat","SET_DIFF","INCREASE","DECREASE","iniitialState","CounterContainer","useSelector","counter","shallowEqual","setDiff","setNumber","Set","workoutItemName","set","index","setIndex","weight","reps","repsCount","setRepsCount","onAddReps","addReps","SetList","workoutItem","sets","name","Object","values","map","key","SetContainer","SetDesc","React","memo","nextSet","setNextSet","onAddSet","workoutItemNameText","addSet","role","aria-label","replace","SetListContainer","Ul","ul","WorkoutList","WorkoutListContainer","routines","Textarea","textarea","MessageBottom","CopyButton","i","DarkBackground","Pop","li","Head","Body","WorkoutListBlock","CircleButton","RoutineBody","setOpen","copyText","setCopyText","copied","copyState","innerHTML","RoutineContainer","App","Boolean","location","hostname","match","rootReducer","combineReducers","action","1","matchedWorkoutItems","keys","filter","reduce","obj","store","createStore","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0305f8c3.chunk.js","sourcesContent":["//액션 타입 정의\r\n// const ADD_ROUTINE = \"routines/ADD_ROUTINE\"; //루틴추가\r\nconst ADD_WORKOUT = \"routines/ADD_WORKOUT\"; //운동추가\r\nconst ADD_SET = \"routines/ADD_SET\"; //세트추가\r\nconst REMOVE_WORKOUT = \"routines/REMOVE_WORKOUT\"; //운동삭제\r\nconst ADD_REPS = \"routines/ADD_REPS\"; //운동삭제\r\n\r\n//액션 정의\r\nexport const addWorkout = text => ({\r\n  type: ADD_WORKOUT,\r\n  text\r\n});\r\n\r\nexport const removeWorkout = text => ({\r\n  type: REMOVE_WORKOUT,\r\n  text\r\n});\r\n\r\n//각 운동마다 추가되지 않고 전체에서 추가 됨\r\n//let nextSet = 1;\r\nexport const addSet = (text, nextSet) => ({\r\n  type: ADD_SET,\r\n  text,\r\n  nextSet\r\n  // newSet: { [++nextSet]: { set: nextSet, reps: 0, weight: 0 } }\r\n});\r\n\r\nexport const addReps = (text, setIndex, reps, weight) => ({\r\n  type: ADD_REPS,\r\n  text,\r\n  setIndex,\r\n  reps,\r\n  weight\r\n});\r\n\r\n// 액션 초기함수 정의\r\nconst DATE = Date.now().toString();\r\nconst today = new Date();\r\nconst dateString = today.toLocaleDateString(\"ko-KR\", {\r\n  year: \"numeric\",\r\n  month: \"long\",\r\n  day: \"numeric\"\r\n});\r\nconst dayName = today.toLocaleDateString(\"ko-KR\", { weekday: \"long\" });\r\nconst initialState = {\r\n  routine: {\r\n    id: DATE,\r\n    title: \"title\",\r\n    createdAt: dateString,\r\n    dayName: dayName,\r\n    desc: \"Description\",\r\n    workoutItems: {\r\n      // squat: {\r\n      //   name: \"squat\",\r\n      //   sets: {\r\n      //     1: {\r\n      //       set: 1,\r\n      //       reps: 0,\r\n      //       weight: 0\r\n      //     },\r\n      //     2: {\r\n      //       set: 2,\r\n      //       reps: 0,\r\n      //       weight: 0\r\n      //     }\r\n      //   }\r\n      // },\r\n      // benchpress: {\r\n      //   name: \"benchpress\",\r\n      //   sets: {\r\n      //     1: {\r\n      //       set: 1,\r\n      //       reps: 0,\r\n      //       weight: 0\r\n      //     }\r\n      //     2: {\r\n      //       set: 2,\r\n      //       reps: 0,\r\n      //       weight: 0\r\n      //     }\r\n      //   }\r\n      // }\r\n    }\r\n  }\r\n};\r\n// 리듀서 작성\r\nexport default function routines(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_WORKOUT:\r\n      return {\r\n        routine: {\r\n          ...state.routine,\r\n          workoutItems: {\r\n            ...state.routine.workoutItems,\r\n            [action.text]: {\r\n              name: [action.text],\r\n              sets: {\r\n                1: {\r\n                  set: 1,\r\n                  reps: 0,\r\n                  weight: 0\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n    case REMOVE_WORKOUT:\r\n      const matchedWorkoutItems = Object.keys(state.routine.workoutItems)\r\n        .filter(key => key !== action.text)\r\n        .reduce((obj, key) => {\r\n          obj[key] = state.routine.workoutItems[key];\r\n          return obj;\r\n        }, {});\r\n      console.log(\"REMOVE_WORKOUT\");\r\n      console.log(\"\\trest items:\", matchedWorkoutItems);\r\n\r\n      return {\r\n        routine: {\r\n          ...state.routine,\r\n          workoutItems: {\r\n            ...matchedWorkoutItems\r\n          }\r\n        }\r\n      };\r\n\r\n    case ADD_SET:\r\n      console.log(\"ADD_SET\", action.text, action.nextSet);\r\n      return {\r\n        routine: {\r\n          ...state.routine,\r\n          workoutItems: {\r\n            ...state.routine.workoutItems,\r\n            [action.text]: {\r\n              ...state.routine.workoutItems[action.text],\r\n              sets: {\r\n                ...state.routine.workoutItems[action.text].sets,\r\n                [action.nextSet]: {\r\n                  set: action.nextSet,\r\n                  reps: 0,\r\n                  weight: 0\r\n                }\r\n                // ...action.newSet\r\n              }\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n    case ADD_REPS:\r\n      console.log(\r\n        \"ADD_REPS\",\r\n        action.text,\r\n        action.setIndex,\r\n        action.reps,\r\n        action.weight\r\n      );\r\n      return {\r\n        routine: {\r\n          ...state.routine,\r\n          workoutItems: {\r\n            ...state.routine.workoutItems,\r\n            [action.text]: {\r\n              ...state.routine.workoutItems[action.text],\r\n              sets: {\r\n                ...state.routine.workoutItems[action.text].sets,\r\n                [action.setIndex]: {\r\n                  set: action.setIndex,\r\n                  reps: action.reps,\r\n                  weight: action.weight\r\n                }\r\n                // ...action.newSet\r\n              }\r\n            }\r\n          }\r\n        }\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { addWorkout } from \"../modules/routines\";\r\n\r\nfunction CreateWorkoutItem({ id }) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  //모듈로 액션 보내기\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddWorkout = text => dispatch(addWorkout(text));\r\n\r\n  //로컬 함수\r\n  const onChange = e => setText(e.target.value);\r\n  const onSubmit = e => {\r\n    e.preventDefault(); // Submit 이벤트 발생했을 때 새로고침 방지\r\n    onAddWorkout(text);\r\n    setText(\"\"); // 인풋 초기화\r\n  };\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      <Input\r\n        id={id}\r\n        value={text}\r\n        placeholder=\"Input your Item\"\r\n        onChange={onChange}\r\n        required\r\n        autoFocus\r\n      />\r\n      <Button type=\"submit\">\r\n        <MdAdd size=\"100%\" />\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\nconst Form = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  padding-bottom: 2px;\r\n  padding-top: 2px;\r\n\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 90%;\r\n  height: 35px;\r\n  font-size: 1.3rem;\r\n  color: #343a40;\r\n  font-weight: bold;\r\n  border: none;\r\n  box-sizing: border-box;\r\n  ::placeholder {\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 10%;\r\n  height: 100%;\r\n  padding: 0;\r\n  display: flex;\r\n  border: none;\r\n  box-sizing: border-box;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  color: white;\r\n\r\n  transition: 0.125s all ease-in;\r\n  background: #38d9a9;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n`;\r\n\r\nexport default CreateWorkoutItem;\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport CreateWorkoutItem from \"./CreateWorkoutItem\";\r\nimport { MdEdit, MdDone } from \"react-icons/md\";\r\n\r\nconst useScroll = () => {\r\n  const [state, setState] = useState({\r\n    x: 0,\r\n    y: 0\r\n  });\r\n\r\n  const onScroll = () => {\r\n    setState({ y: window.scrollY, x: window.scrollX });\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => window.removeEventListener(\"scroll\", onscroll);\r\n  }, []);\r\n  return state;\r\n};\r\n\r\nfunction RoutineHead({ routine }) {\r\n  const [inputs, setInputs] = useState({\r\n    title: routine.title,\r\n    desc: routine.desc\r\n  });\r\n  const { title, desc } = inputs;\r\n  const [readonly, setReadOnly] = useState(true);\r\n  const [toggle, setToggle] = useState(false);\r\n  const { y } = useScroll();\r\n\r\n  const onChange = e => {\r\n    const { title, desc } = e.target;\r\n    console.log(e.target);\r\n    setInputs({ ...inputs, [title]: title, [desc]: desc });\r\n  };\r\n  const EditTitle = () => {\r\n    setReadOnly(!readonly);\r\n  };\r\n  const test = e => {\r\n    console.log(e.target);\r\n  };\r\n  return (\r\n    <RoutineHeadBlock>\r\n      <RoutineHeadLine>\r\n        <Input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={onChange}\r\n          onMouseOver={test}\r\n          readOnly={readonly}\r\n        />\r\n        {readonly ? (\r\n          <MdEdit onClick={EditTitle} />\r\n        ) : (\r\n          <MdDone onClick={setReadOnly} />\r\n        )}\r\n      </RoutineHeadLine>\r\n      <RoutineHeadLine>\r\n        <Input\r\n          type=\"text\"\r\n          value={desc}\r\n          onChange={onChange}\r\n          readOnly={readonly}\r\n        />\r\n        {readonly ? (\r\n          <MdEdit onClick={EditTitle} />\r\n        ) : (\r\n          <MdDone onClick={setReadOnly} />\r\n        )}\r\n      </RoutineHeadLine>\r\n      <h2>\r\n        {routine.createdAt}\r\n        <span className=\"day\">{routine.dayName}</span>\r\n      </h2>\r\n      <CreateWorkoutItemBlock\r\n        style={{ position: y > 224 ? \"fixed\" : \"static\" }}\r\n      >\r\n        <CreateWorkoutItem onCreate={routine} />\r\n      </CreateWorkoutItemBlock>\r\n    </RoutineHeadBlock>\r\n  );\r\n}\r\nconst RoutineHeadLine = styled.h2`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst CreateWorkoutItemBlock = styled.div`\r\n  padding-left: 32px;\r\n  padding-right: 32px;\r\n  top: 0;\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  border-bottom: 1px solid #e9ecef;\r\n  background: #fff;\r\n`;\r\nconst Input = styled.input`\r\n  flex: 1;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: none;\r\n  color: #343a40;\r\n  font-weight: bold;\r\n`;\r\nconst RoutineHeadBlock = styled.div`\r\n  padding-top: 48px;\r\n  h2 {\r\n    margin: 0;\r\n    font-size: 2rem;\r\n    color: #343a40;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n  }\r\n  .day {\r\n    margin-top: 4px;\r\n    color: #868e96;\r\n    font-size: 21px;\r\n  }\r\n  .tasks-left {\r\n    color: #20c997;\r\n    font-size: 18px;\r\n    margin-top: 40px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n\r\nconst Modify = styled.span`\r\n  cursor: pointer;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0);\r\n  &:hover {\r\n    border-bottom: 1px solid #343a40;\r\n  }\r\n  svg {\r\n    width: 18px;\r\n    height: 100%;\r\n    fill: #343a40;\r\n  }\r\n  ${props =>\r\n    props.open &&\r\n    css`\r\n      border-bottom: 1px solid #343a40;\r\n      &:hover {\r\n        border-bottom: 1px solid #343a40;\r\n      }\r\n      &:active {\r\n        border-bottom: 1px solid rgba(255, 255, 255, 0);\r\n        opacity: 0.8;\r\n      }\r\n    `}\r\n`;\r\n\r\nexport default RoutineHead;\r\n","import React from \"react\";\r\nimport { MdArrowUpward, MdArrowDownward } from \"react-icons/md\";\r\n\r\nfunction Counter({\r\n  number,\r\n  diff,\r\n  unit,\r\n  onIncrease,\r\n  onDecrease,\r\n  onSetNumber,\r\n  onSetDiff\r\n}) {\r\n  const onChangeNumber = e => {\r\n    e.target.value\r\n      ? onSetNumber(parseFloat(e.target.value, 10))\r\n      : (e.target.value = 0);\r\n  };\r\n\r\n  const onChangeDiff = e => {\r\n    e.target.value\r\n      ? onSetDiff(parseFloat(e.target.value, 10))\r\n      : (e.target.value = diff);\r\n  };\r\n  const selfSelect = e => {\r\n    e.target.select();\r\n  };\r\n  return (\r\n    <div className=\"Setter\">\r\n      <div>\r\n        설정 값\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Set your the smallest weight\"\r\n          value={diff}\r\n          min=\"1.25\"\r\n          onChange={onChangeDiff}\r\n          onClick={selfSelect}\r\n        />\r\n        <span className=\"unit\">{unit}</span>\r\n      </div>\r\n      <div className=\"Button-Count-Up\" onClick={onIncrease}>\r\n        <MdArrowUpward />\r\n      </div>\r\n      <div>\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Input your Weight\"\r\n          value={number}\r\n          min=\"1\"\r\n          onChange={onChangeNumber}\r\n          onClick={selfSelect}\r\n        />\r\n        <span className=\"unit\">{unit}</span>\r\n      </div>\r\n      <div className=\"Button-Count-Down\" onClick={onDecrease}>\r\n        <MdArrowDownward />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Counter;\r\n","const SET_NUMBER = \"counter/SET_NUMBER\";\r\nconst SET_DIFF = \"counter/SET_DIFF\";\r\nconst INCREASE = \"counter/INCREASE\";\r\nconst DECREASE = \"counter/DECREASE\";\r\n\r\nexport const setNumber = number => ({ type: SET_NUMBER, number });\r\nexport const setDiff = diff => ({ type: SET_DIFF, diff });\r\nexport const increase = () => ({ type: INCREASE });\r\nexport const decrease = () => ({ type: DECREASE });\r\n\r\nconst iniitialState = {\r\n  number: 0,\r\n  diff: 1.25,\r\n  unit: \"kg\"\r\n};\r\n\r\nexport default function counter(state = iniitialState, action) {\r\n  switch (action.type) {\r\n    case SET_NUMBER:\r\n      return {\r\n        ...state,\r\n        number: action.number\r\n      };\r\n    case SET_DIFF:\r\n      return {\r\n        ...state,\r\n        diff: action.diff\r\n      };\r\n    case INCREASE:\r\n      return {\r\n        ...state,\r\n        number: state.number + state.diff\r\n      };\r\n    case DECREASE:\r\n      return {\r\n        ...state,\r\n        number: state.number - state.diff\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Counter from \"../components/Counter\";\r\nimport { useSelector, useDispatch, shallowEqual } from \"react-redux\";\r\nimport { increase, decrease, setDiff, setNumber } from \"../modules/counter\";\r\nimport \"./CounterContainer.scss\";\r\n\r\nfunction CounterContainer() {\r\n  const { number, diff, unit } = useSelector(\r\n    state => ({\r\n      number: state.counter.number,\r\n      diff: state.counter.diff,\r\n      unit: state.counter.unit\r\n    }),\r\n    shallowEqual\r\n  );\r\n  //디스패치\r\n  const dispatch = useDispatch();\r\n\r\n  const onIncrease = () => dispatch(increase());\r\n  const onDecrease = () => dispatch(decrease());\r\n  const onSetNumber = number => dispatch(setNumber(number));\r\n  const onSetDiff = diff => dispatch(setDiff(diff));\r\n\r\n  return (\r\n    <div className=\"SetterNav\">\r\n      <Counter\r\n        number={number}\r\n        diff={diff}\r\n        unit={unit}\r\n        onIncrease={onIncrease}\r\n        onDecrease={onDecrease}\r\n        onSetDiff={onSetDiff}\r\n        onSetNumber={onSetNumber}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CounterContainer;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addReps } from \"../modules/routines\";\r\nimport \"./Set.scss\";\r\n\r\nfunction Set({ workoutItemName, set, index }) {\r\n  console.log(workoutItemName, set, index);\r\n  const setIndex = index + 1;\r\n  //전역\r\n  const weight = useSelector(state => state.counter.number);\r\n  const reps = set.reps;\r\n  console.log(reps);\r\n  //로컬\r\n  const [repsCount, setRepsCount] = useState(0);\r\n\r\n  //모듈로 액션 보내기\r\n  const dispatch = useDispatch();\r\n\r\n  const onAddReps = (workoutItemName, setIndex, repsCount, weight) => {\r\n    dispatch(addReps(workoutItemName, setIndex, repsCount, weight));\r\n  };\r\n\r\n  //로컬 함수\r\n  const clickAddReps = () => {\r\n    setRepsCount(repsCount + 1);\r\n\r\n    console.log(\"reps\", reps);\r\n    console.log(\"repsCount\", repsCount);\r\n    console.log(\"weight\", weight);\r\n    onAddReps(workoutItemName, setIndex, repsCount, weight);\r\n    console.log(\"reps\", reps);\r\n    console.log(\"repsCount\", repsCount);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Button\" onClick={clickAddReps}>\r\n        {reps}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Set;\r\n","import React from \"react\";\r\nimport Set from \"./Set\";\r\n\r\nfunction SetList({ workoutItem }) {\r\n  const sets = workoutItem.sets;\r\n  const workoutItemName = workoutItem.name;\r\n  return (\r\n    <>\r\n      {Object.values(sets).map((set, index) => (\r\n        <Set\r\n          key={index}\r\n          index={index}\r\n          set={set}\r\n          workoutItemName={workoutItemName}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SetList;\r\n","import React from \"react\";\r\nimport SetList from \"../components/SetList\";\r\n\r\nfunction SetContainer({ sets, workoutItem }) {\r\n  // console.log(sets);\r\n  return <SetList sets={sets} workoutItem={workoutItem} />;\r\n}\r\n\r\nexport default SetContainer;\r\n","import React, { useState } from \"react\";\r\nimport \"./WorkoutItem.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { MdAdd, MdDelete } from \"react-icons/md\";\r\nimport SetListContainer from \"../containers/SetListContainer\";\r\nimport { removeWorkout, addSet } from \"../modules/routines\";\r\n\r\nfunction SetDesc({ set }) {\r\n  return (\r\n    <li>\r\n      <span>{set.set}</span>set\r\n      <span>{set.weight}</span>kg\r\n      <span>{set.reps}</span>reps\r\n    </li>\r\n  );\r\n}\r\n\r\nfunction WorkoutItem({ workoutItem }) {\r\n  const [nextSet, setNextSet] = useState(2);\r\n  const workoutItemName = workoutItem.name;\r\n  const sets = workoutItem.sets;\r\n\r\n  //모듈로 액션 보내기\r\n  const dispatch = useDispatch();\r\n\r\n  const onRemoveWorkout = workoutItemNameText =>\r\n    dispatch(removeWorkout(workoutItemNameText));\r\n  const onAddSet = (workoutItemNameText, nextSet) =>\r\n    dispatch(addSet(workoutItemNameText, nextSet));\r\n\r\n  const clickRemoveWorkout = () => {\r\n    // console.log(workoutItemName.toString());\r\n    //workoutItems의 운동항목 동적으로 바꿀 것\r\n    onRemoveWorkout(workoutItemName.toString().replace(/(\\s*)/g, \"\"));\r\n  };\r\n  const clickAddSet = () => {\r\n    // console.log(workoutItemName.toString());\r\n    //workoutItems의 운동항목 동적으로 바꿀 것\r\n    setNextSet(nextSet + 1);\r\n    // console.log(workoutItem);\r\n    onAddSet(workoutItemName.toString().replace(/(\\s*)/g, \"\"), nextSet);\r\n    // console.log(workoutItemName.toString());\r\n    // console.log(nextSet);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <li className=\"WorkoutItem\">\r\n        <div className=\"WorkoutItemHead\">\r\n          <span className=\"name\">\r\n            <b>{workoutItemName}</b>\r\n          </span>\r\n          <span\r\n            role=\"img\"\r\n            aria-label=\"Delete WorkoutItem\"\r\n            className=\"Button-del\"\r\n            onClick={clickRemoveWorkout}\r\n          >\r\n            <MdDelete />\r\n          </span>\r\n          <ul className=\"sets\">\r\n            {Object.values(sets).map((set, index) => (\r\n              <SetDesc key={index} set={set} />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"WorkoutItemButtonsBlock\">\r\n          <div className=\"Buttons\">\r\n            <SetListContainer sets={sets} workoutItem={workoutItem} />\r\n          </div>\r\n          <div className=\"addButton\" onClick={clickAddSet}>\r\n            <MdAdd />\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(WorkoutItem);\r\n","import React from \"react\";\r\nimport WorkoutItem from \"./WorkoutItem\";\r\nimport styled from \"styled-components\";\r\nfunction WorkoutList({ workoutItems }) {\r\n  return (\r\n    <Ul>\r\n      {Object.values(workoutItems).map((workoutItem, index) => (\r\n        <WorkoutItem key={index} workoutItem={workoutItem} />\r\n      ))}\r\n    </Ul>\r\n  );\r\n}\r\n\r\nconst Ul = styled.ul`\r\n  padding: 0;\r\n`;\r\n\r\nexport default WorkoutList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport WorkoutList from \"../components/WorkoutList\";\r\n\r\nfunction WorkoutListContainer({}) {\r\n  //workout들\r\n  const workoutItems = useSelector(\r\n    state => state.routines.routine.workoutItems\r\n  );\r\n  return <WorkoutList workoutItems={workoutItems} />;\r\n}\r\n\r\nexport default WorkoutListContainer;\r\n","import React, { useState } from \"react\";\r\nimport CounterContainer from \"../containers/CounterContainer\";\r\nimport WorkoutListContainer from \"../containers/WorkoutListContainer\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { MdArrowBack, MdCheck, MdContentCopy } from \"react-icons/md\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nfunction TextWorkoutListBlock({ workoutItem }) {\r\n  return (\r\n    <ul>\r\n      <TextWorkoutList>\r\n        <div className=\"name\">{workoutItem.name}</div>\r\n        {Object.values(workoutItem.sets).map((set, index1) => (\r\n          <div className=\"set\" key=\"index1\">\r\n            <span>{set.set}set</span>\r\n            <span>{set.weight}kg</span>\r\n            <span>{set.reps}reps</span>\r\n          </div>\r\n        ))}\r\n      </TextWorkoutList>\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction RoutineBody({ routine }) {\r\n  const [open, setOpen] = useState(false);\r\n  const [copyText, setCopyText] = useState(\"\");\r\n  const [readonly, setReadonly] = useState(true);\r\n  const [copyState, setCopyState] = useState({\r\n    value: copyText,\r\n    copied: false\r\n  });\r\n  const openPop = () => {\r\n    setOpen(true);\r\n    setCopyText(\r\n      (\r\n        routine.title +\r\n        \"\\n\" +\r\n        routine.desc +\r\n        \"\\n\" +\r\n        routine.createdAt +\r\n        \"\\n\" +\r\n        Object.values(routine.workoutItems).map(\r\n          workoutItem =>\r\n            workoutItem.name +\r\n            \"\\n\" +\r\n            Object.values(workoutItem.sets).map(\r\n              set => set.set + \"set \" + set.weight + \"kg \" + set.reps + \"reps\\n\"\r\n            )\r\n        )\r\n      ).replace(/,/gi, \"\")\r\n    );\r\n  };\r\n  const closePop = () => {\r\n    setOpen(false);\r\n  };\r\n  const onClick = ({ target: { innerHTML } }) => {\r\n    console.log(copyText);\r\n    console.log(`Clicked on \"${innerHTML}\"!`); // eslint-disable-line\r\n  };\r\n  const onEdit = () => {\r\n    setReadonly(!readonly);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <WorkoutListBlock>\r\n        <WorkoutListContainer routine={routine} />\r\n        <CounterContainer />\r\n      </WorkoutListBlock>\r\n      {open && (\r\n        <DarkBackground>\r\n          <Pop>\r\n            <Button onClick={closePop}>X</Button>\r\n            <Head>\r\n              Today's Routine\r\n              <CopyToClipboard\r\n                // options={{ message: \"Whoa!\" }}\r\n                text={copyText}\r\n              >\r\n                <CopyButton onClick={onClick}>\r\n                  <MdContentCopy />\r\n                </CopyButton>\r\n              </CopyToClipboard>\r\n            </Head>\r\n            <Body>\r\n              <Textarea\r\n                // onClick={onEdit}\r\n                onChange={e => setCopyText(e.target.value)}\r\n                readOnly={readonly}\r\n                value={copyText}\r\n              />\r\n              {/* <div>{routine.title}</div>\r\n              <div>{routine.desc}</div>\r\n              {Object.values(routine.workoutItems).map((workoutItem, index) => (\r\n                <TextWorkoutListBlock key={index} workoutItem={workoutItem} />\r\n              ))} */}\r\n            </Body>\r\n          </Pop>\r\n          {copyState.copied && <MessageBottom>Copied.</MessageBottom>}\r\n        </DarkBackground>\r\n      )}\r\n      <CircleButton onClick={openPop}>\r\n        <MdCheck />\r\n      </CircleButton>\r\n    </>\r\n  );\r\n}\r\nconst Textarea = styled.textarea`\r\n  resize: none;\r\n  width: 100%;\r\n  height: 100%;\r\n  outline: none;\r\n  border: none;\r\n  font-size: 18px;\r\n  font-size: 18px;\r\n  color: #343a40;\r\n`;\r\nconst MessageBottom = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  width: 90%;\r\n  position: absolute;\r\n  bottom: -100px;\r\n  left: 0;\r\n  right: 0;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  height: 100px;\r\n  border-radius: 10px;\r\n  color: #fff;\r\n  background: rgba(51, 51, 51, 0.7);\r\n\r\n  opacity: 0.7;\r\n  animation-name: SlideUp;\r\n  animation-duration: 4s;\r\n  animation-timing-function: ease-in-out;\r\n\r\n  @keyframes SlideUp {\r\n    30%,\r\n    70% {\r\n      opacity: 1;\r\n      bottom: 100px;\r\n    }\r\n  }\r\n`;\r\nconst CopyButton = styled.i`\r\n  display: inline-block;\r\n  cursor: pointer;\r\n`;\r\nconst Button = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n\r\n  width: 50px;\r\n  height: 50px;\r\n  transform: translate(25px, -25px);\r\n  border-radius: 50%;\r\n\r\n  background-color: #fa5252;\r\n  color: #fff;\r\n\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DarkBackground = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  z-index: 99;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgba(0, 0, 0, 0.8);\r\n`;\r\nconst TextWorkoutList = styled.li`\r\n  .name {\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n  }\r\n  .set {\r\n    font-size: 18px;\r\n  }\r\n`;\r\nconst Pop = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 80%;\r\n  max-width: 512px;\r\n  height: 80%;\r\n  min-height: 400px;\r\n  max-height: 600px;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  box-shadow: 0px 10px 20px 3px rgba(0, 0, 0, 0.2);\r\n\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n  margin-bottom: auto;\r\n\r\n  font-size: 24px;\r\n  color: #343a40;\r\n`;\r\nconst Head = styled.div`\r\n  padding-bottom: 10px;\r\n  margin-bottom: 10px;\r\n  border-bottom: 1px solid #ccc;\r\n`;\r\nconst Body = styled.div`\r\n  height: 100%;\r\n  overflow-y: auto;\r\n  /* ●●●●●●●스크롤바 숨기기 */\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\nconst WorkoutListBlock = styled.div`\r\n  flex: 1;\r\n  padding-bottom: 100px;\r\n  overflow-y: auto;\r\n  padding-left: 32px;\r\n  padding-right: 32px;\r\n`;\r\n\r\nconst CircleButton = styled.button`\r\n  display: block;\r\n  background: #38d9a9;\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n\r\n  z-index: 9;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 60px;\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0px;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n\r\n  transition: 0.125s all ease-in;\r\n  ${props =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\nexport default RoutineBody;\r\n","import React from \"react\";\r\nimport RoutineHead from \"../components/RoutineHead\";\r\nimport RoutineBody from \"../components/RoutineBody\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction RoutineContainer() {\r\n  //■■■■■■루틴이 한 개 인 상황\r\n  const routine = useSelector(state => state.routines.routine);\r\n  // const state = useSelector(state => state);\r\n\r\n  // console.log(state);\r\n  // console.log(routine);\r\n  return (\r\n    <div>\r\n      <RoutineHead routine={routine} />\r\n      <RoutineBody routine={routine} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoutineContainer;\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport \"./initialize.scss\";\r\nimport RoutineContainer from \"./containers/RoutineContainer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"MWR-wrapper\">\r\n        <RoutineContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\r\nimport counter from \"./counter\";\r\nimport routines from \"./routines\";\r\n\r\nconst rootReducer = combineReducers({\r\n  //reucer 합치기\r\n  counter,\r\n  routines\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./modules\";\r\n\r\nconst store = createStore(\r\n  rootReducer, /* preloadedState, */\r\n);\r\nconsole.log(store.getState());\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}